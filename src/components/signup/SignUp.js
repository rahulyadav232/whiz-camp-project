import React, { useState } from "react";
import { Link } from "react-router-dom";
import "./SignUp.css";

const SignUp = () => {
    const [formData, setFormData] = useState({
        firstName: '',
        lastName: '',
        education: '',
        skills: '',
        workPlace: '',
        hobbies: '',
      });
    
      // Handle input changes and update state
      const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData({ ...formData, [name]: value });
      };
    
      // Handle form submission (you can add your logic here)
      const handleSubmit = async() => {
        try {
            const response = await fetch('http://localhost:5001/submit-form', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(formData),
            });
      
            if (response.ok) {
              console.log('Form submitted successfully');
              // Add any additional logic after successful form submission
            } else {
              console.error('Failed to submit form');
            }
          } catch (error) {
            console.error('Error submitting form:', error);
          }
        
      };
    
  return (
    <>
    
    <div className="nav-bar">
        <svg className="nav-icon"  viewBox="0 0 58 50" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14.2841 0.27523C13.0456 2.20183 11.3025 5.43578 11.4401 5.57339C11.5318 5.66514 17.908 5.77982 25.5915 5.80275C38.3438 5.84862 39.5594 5.87156 39.6282 6.2156C39.674 6.44495 39.2612 7.29358 38.7566 8.1422C38.2291 9.01376 37.7015 9.93119 37.5869 10.1835C37.4493 10.4587 37.2199 10.9174 37.0364 11.2156C36.8759 11.5367 36.7841 11.8807 36.83 11.9725C37.0135 12.2706 49.9951 12.1789 49.9951 11.8807C49.9951 11.7431 49.697 11.1239 49.3071 10.5046C48.9171 9.90826 48.619 9.31193 48.619 9.19725C48.619 9.1055 48.3208 8.57798 47.9309 8.07339C47.5639 7.54587 47.2428 7.04128 47.2428 6.97248C47.2428 6.88073 46.8071 6.07798 46.2566 5.18349C45.7061 4.28899 45.2016 3.3945 45.1098 3.21101C45.0181 3.02752 44.7428 2.54587 44.4905 2.1789C44.2383 1.78899 43.9171 1.23853 43.8025 0.917431C43.6649 0.619266 43.4126 0.275229 43.2749 0.183486C43.1144 0.0917429 36.5777 0 28.7337 0C17.5639 0 14.4217 0.0688075 14.2841 0.27523ZM7.19696 12.6835C7.01348 12.7982 6.76118 13.0963 6.62357 13.3716C6.50889 13.6468 6.3254 14.0367 6.18779 14.2202C5.54559 15.2064 3.89421 18.0734 3.89421 18.211C3.89421 18.3028 3.71072 18.6468 3.45843 18.9908C3.22907 19.3349 2.44926 20.6422 1.71531 21.9037C0.981367 23.1651 0.293293 24.2202 0.178614 24.2661C-0.142487 24.4037 -0.0278073 25.0917 0.499716 25.9174C1.46302 27.4312 1.5777 27.6376 1.80706 28.1422C2.2199 29.0596 3.20614 30.5046 3.41256 30.5046C3.52724 30.5046 3.87128 30 4.19238 29.4037C5.31623 27.2706 8.02265 22.5688 8.73366 21.5138C8.98595 21.1697 9.16944 20.8257 9.16944 20.7569C9.16944 20.6881 9.94926 19.3349 10.8896 17.7523C11.83 16.1697 12.6098 14.8165 12.6098 14.7248C12.6098 14.656 12.885 14.1972 13.2061 13.7156C13.5502 13.2339 13.7566 12.7523 13.6649 12.6605C13.4126 12.4312 7.60981 12.4541 7.19696 12.6835ZM22.5181 12.6147C21.486 12.7294 21.486 12.7294 20.385 14.9083C20.1098 15.4817 19.5364 16.445 19.1465 17.0872C18.7337 17.7064 18.0685 18.8532 17.6557 19.6101C17.2428 20.367 16.7841 21.1468 16.6465 21.3303C16.5089 21.5138 16.1878 22.0413 15.9355 22.4771C15.1327 23.922 14.4676 25.0917 13.986 25.9174C13.1603 27.3165 12.5639 28.3486 9.90339 32.9817L7.28871 37.5L7.70155 38.3028C7.93091 38.7385 8.55017 39.8165 9.0777 40.711C9.58228 41.5826 10.0869 42.5459 10.1786 42.8211C10.2704 43.1193 10.4309 43.3486 10.5227 43.3486C10.6144 43.3486 10.9126 43.7844 11.2107 44.3119C11.486 44.8624 11.9217 45.5963 12.174 45.9862C12.4034 46.3532 12.7474 46.9725 12.9309 47.3624C13.1144 47.7294 13.5731 48.4862 13.963 49.0367L14.674 50H43.1373L43.5272 49.3119C43.7337 48.945 43.986 48.6239 44.1006 48.6239C44.1924 48.6239 44.2612 48.5092 44.2612 48.3716C44.2612 48.2339 44.6052 47.5229 45.041 46.8119C45.4538 46.1009 46.096 45 46.4401 44.3807C46.7841 43.7385 47.7704 42.0413 48.619 40.5963C53.8483 31.6743 53.7566 31.8578 53.4126 31.6284C53.2291 31.5138 52.7933 31.4679 52.4263 31.5367C52.0594 31.6055 50.7061 31.6514 49.4217 31.6514H47.0593L45.6373 34.1055C44.8575 35.4817 43.3438 38.0505 42.2887 39.8394C41.2337 41.6284 40.3621 43.1881 40.3621 43.3257C40.3621 44.0138 39.3071 44.0826 28.596 44.0596C22.6557 44.0367 17.7933 44.0138 17.7704 43.9679C17.174 43.211 14.2153 37.867 14.2153 37.5917C14.2153 37.3624 14.674 36.3991 15.2474 35.4817C15.8208 34.5413 16.2795 33.6927 16.2795 33.6239C16.2795 33.5321 16.5318 33.1193 16.8529 32.7064C17.174 32.2936 17.4263 31.8807 17.4263 31.789C17.4263 31.6972 17.9538 30.7569 18.5731 29.6789C19.2153 28.6009 19.7199 27.7064 19.7199 27.6606C19.7199 27.5688 22.3346 23.0963 23.2749 21.6055C23.619 21.078 24.1465 20.1606 24.4447 19.5642C24.7658 18.9679 25.5456 17.6376 26.1649 16.5826C26.7841 15.5275 27.2887 14.6101 27.2887 14.5183C27.2887 14.4495 27.5639 14.0367 27.885 13.6009C28.2061 13.1651 28.4126 12.7523 28.3438 12.6605C28.1603 12.4771 23.9171 12.4541 22.5181 12.6147Z" fill="black"/>
<path d="M32.3576 19.4724C32.0365 19.8393 31.5089 20.6421 31.1878 21.2384C30.4309 22.7292 29.7429 23.9678 24.0548 33.7613C23.5502 34.587 23.1603 35.3669 23.1603 35.4586C23.1603 35.5503 22.9309 35.8714 22.6786 36.1467C22.0594 36.8118 22.2429 37.4999 22.9997 37.2935C23.275 37.2247 26.3484 37.1558 29.8346 37.1558H36.142L36.6466 36.1696C37.2888 34.9311 38.0915 33.532 38.619 32.7522C39.33 31.6742 39.1236 31.5824 35.7521 31.5595C32.7475 31.5366 32.6787 31.5366 32.6098 31.032C32.564 30.7109 32.9998 29.7247 33.7337 28.5091C34.3988 27.4081 35.1328 26.1237 35.3621 25.6421L35.775 24.7705H46.5548C53.3209 24.7705 57.3346 24.6788 57.3346 24.5412C57.3346 24.2889 54.6741 19.7705 54.1695 19.1971C53.8484 18.8302 53.0915 18.8072 43.3897 18.8072L32.9539 18.8302L32.3576 19.4724Z" fill="black"/>
</svg>
    <p className="navbar-title">Build your portfolio in minutes</p>
   
</div>
    <div className="form-page">
       
      <div className="left-side" >
        <h1>Build your 
Portfolio instantly !!</h1>
<br/>
<br/>
<p className="leftside-test">Start testing in minutes !</p>
      </div>
      <form className="form-data">
      <label className="form-details">Please enter your details</label>
      
        <div className="form-name first-last">
        <label htmlFor="first-name">
          First name
          <input type="text" id="first-name" name="firstName" onChange={handleInputChange} />
        </label>
        <label htmlFor="last-name">
          Last name
          <input type="text" id="last-name" name="lastName" onChange={handleInputChange} />
        </label>
      </div>
      <div className="form-name">
        <label htmlFor="education">
          Education
          <input type="text" id="education" name="education" onChange={handleInputChange} />
        </label>
      </div>
      <div className="form-name">
        <label htmlFor="skill">
          Skills
          <input type="text" id="skill" name="skills" onChange={handleInputChange} />
        </label>
      </div>
      <div className="form-name">
        <label htmlFor="work-place">
          Work place
          <input type="text" id="work-place" name="workPlace" onChange={handleInputChange} />
        </label>
      </div>
      <div className="form-name">
        <label htmlFor="hobbies">
          Hobbies
          <input type="text" id="hobbies" name="hobbies" onChange={handleInputChange} />
        </label>
      </div >
      <Link to="/table" onClick={handleSubmit} className="button-container">
        <button type="button">Click to proceed</button>
      </Link>
    </form>
    </div>
    </>
  );
};

export default SignUp;
